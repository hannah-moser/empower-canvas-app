{"ast":null,"code":"var _jsxFileName = \"/Users/hannahmoser/Desktop/empower-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = React.useState('');\n  const [notes, setNotes] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [allCanvasNotes, setAllCanvasNotes] = React.useState(null);\n  React.useEffect(() => {\n    fetch('/canvas').then(res => res.json()).then(json => setAllCanvasNotes(json.data));\n  }, []);\n  let handleSubmit = async e => {\n    e.preventDefault();\n    let response = await fetch('/canvas', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        notes: notes\n      })\n    });\n    if (response.status === 200) {\n      setName('');\n      setNotes('');\n      setMessage('Notes saved');\n    } else {\n      setMessage('Error saving notes');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: !notes ? \"Loading...\" : notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xClwv2G2yW+Ku3zWqeQiHzN1o/w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","logo","jsxDEV","_jsxDEV","App","_s","name","setName","React","notes","setNotes","message","setMessage","allCanvasNotes","setAllCanvasNotes","useEffect","fetch","then","res","json","data","handleSubmit","e","preventDefault","response","method","headers","body","JSON","stringify","status","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hannahmoser/Desktop/empower-app/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [name, setName] = React.useState('')\n  const [notes, setNotes] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [allCanvasNotes, setAllCanvasNotes] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch('/canvas')\n      .then((res) => res.json())\n      .then((json) => setAllCanvasNotes(json.data));\n  }, []);\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let response = await fetch('/canvas', {\n      method: \"POST\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        notes: notes,\n      })\n    });\n\n    if (response.status === 200) {\n      setName('');\n      setNotes('');\n      setMessage('Notes saved');\n    } else {\n      setMessage('Error saving notes');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{!notes ? \"Loading...\" : notes}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,KAAK,CAACR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGF,KAAK,CAACR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGJ,KAAK,CAACR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,KAAK,CAACR,QAAQ,CAAC,IAAI,CAAC;EAEhEQ,KAAK,CAACO,SAAS,CAAC,MAAM;IACpBC,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAKL,iBAAiB,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIC,QAAQ,GAAG,MAAMR,KAAK,CAAC,SAAS,EAAE;MACpCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBvB,IAAI,EAAEA,IAAI;QACVG,KAAK,EAAEA;MACT,CAAC;IACH,CAAC,CAAC;IAEF,IAAIe,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;MAC3BvB,OAAO,CAAC,EAAE,CAAC;MACXG,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,aAAa,CAAC;IAC3B,CAAC,MAAM;MACLA,UAAU,CAAC,oBAAoB,CAAC;IAClC;EACF,CAAC;EAED,oBACET,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB7B,OAAA;MAAQ4B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B7B,OAAA;QAAK8B,GAAG,EAAEhC,IAAK;QAAC8B,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClDnC,OAAA;QAAA6B,QAAA,EAAI,CAACvB,KAAK,GAAG,YAAY,GAAGA;MAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACjC,EAAA,CA3CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}