{"ast":null,"code":"var _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nfunction App() {\n  _s();\n  const [name, setName] = React.useState('');\n  const [notes, setNotes] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [allCanvasNotes, setAllCanvasNotes] = React.useState(null);\n  React.useEffect(() => {\n    fetch('/canvas').then(res => res.json()).then(json => setAllCanvasNotes(json.data));\n  }, []);\n  let handleSubmit = async e => {\n    e.preventDefault();\n    let response = await fetch('/canvas', {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        notes: notes\n      })\n    });\n    if (response.status === 200) {\n      setName('');\n      setNotes('');\n      setMessage('Notes saved');\n    } else {\n      setMessage('Error saving notes');\n    }\n  };\n  return hi\n  // <div className=\"App\">\n  //   <h1>Add Canvas Notes</h1>\n  //   <div className=\"canvas-form\">\n  //     <form method='POST' action='/canvas'>\n  //       <input \n  //         type=\"text\" \n  //         value={name} \n  //         placeholder=\"Name\"\n  //         onChange={(e) => setName(e.target.value)} \n  //       />\n  //       <br/>\n  //       <input \n  //         type=\"text\" \n  //         value={notes} \n  //         placeholder=\"Notes\"\n  //         onChange={(e) => setNotes(e.target.value)} \n  //       />\n  //       <button type='submit' >Save Notes</button>\n  //       <div className=\"message\">\n  //         {message ? <p>{message}</p> : null}\n  //       </div>\n  //     </form>\n  //   </div>\n  // </div>\n  ;\n}\n_s(App, \"xClwv2G2yW+Ku3zWqeQiHzN1o/w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","App","_s","name","setName","notes","setNotes","message","setMessage","allCanvasNotes","setAllCanvasNotes","useEffect","fetch","then","res","json","data","handleSubmit","e","preventDefault","response","method","headers","body","JSON","stringify","status","hi","_c","$RefreshReg$"],"sources":["/Users/hannahmoser/Desktop/empower-app/client/src/App.js"],"sourcesContent":["import { React, useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [name, setName] = React.useState('')\n  const [notes, setNotes] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [allCanvasNotes, setAllCanvasNotes] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch('/canvas')\n      .then((res) => res.json())\n      .then((json) => setAllCanvasNotes(json.data));\n  }, []);\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let response = await fetch('/canvas', {\n      method: \"POST\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        notes: notes,\n      })\n    });\n\n    if (response.status === 200) {\n      setName('');\n      setNotes('');\n      setMessage('Notes saved');\n    } else {\n      setMessage('Error saving notes');\n    }\n  };\n\n  return (\n    hi\n    // <div className=\"App\">\n    //   <h1>Add Canvas Notes</h1>\n    //   <div className=\"canvas-form\">\n    //     <form method='POST' action='/canvas'>\n    //       <input \n    //         type=\"text\" \n    //         value={name} \n    //         placeholder=\"Name\"\n    //         onChange={(e) => setName(e.target.value)} \n    //       />\n    //       <br/>\n    //       <input \n    //         type=\"text\" \n    //         value={notes} \n    //         placeholder=\"Notes\"\n    //         onChange={(e) => setNotes(e.target.value)} \n    //       />\n    //       <button type='submit' >Save Notes</button>\n    //       <div className=\"message\">\n    //         {message ? <p>{message}</p> : null}\n    //       </div>\n    //     </form>\n    //   </div>\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;EAEhED,KAAK,CAACa,SAAS,CAAC,MAAM;IACpBC,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAKL,iBAAiB,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIC,QAAQ,GAAG,MAAMR,KAAK,CAAC,SAAS,EAAE;MACpCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBtB,IAAI,EAAEA,IAAI;QACVE,KAAK,EAAEA;MACT,CAAC;IACH,CAAC,CAAC;IAEF,IAAIe,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;MAC3BtB,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,aAAa,CAAC;IAC3B,CAAC,MAAM;MACLA,UAAU,CAAC,oBAAoB,CAAC;IAClC;EACF,CAAC;EAED,OACEmB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACzB,EAAA,CA9DQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}